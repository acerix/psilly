{"version":3,"sources":["webpack:///https://raw.githubusercontent.com/fb55/entities/f85d378bc4dbe36a3a7b0f757114d3d71f950d31/src/decode_codepoint.ts","webpack:///https://raw.githubusercontent.com/fb55/entities/f85d378bc4dbe36a3a7b0f757114d3d71f950d31/src/escape.ts","webpack:///https://raw.githubusercontent.com/fb55/entities/f85d378bc4dbe36a3a7b0f757114d3d71f950d31/src/generated/decode-data-html.ts","webpack:///../node_modules/parse5/dist/common/unicode.js","webpack:///../node_modules/parse5/dist/common/token.js","webpack:///../node_modules/parse5/dist/common/html.js","webpack:///../node_modules/parse5/dist/tokenizer/index.js","webpack:///../node_modules/parse5/dist/tree-adapters/default.js","webpack:///../node_modules/parse5/dist/common/doctype.js","webpack:///../node_modules/parse5/dist/common/foreign-content.js","webpack:///../node_modules/parse5/dist/parser/index.js","webpack:///../node_modules/parse5/dist/serializer/index.js","webpack:///../node_modules/preact-html-converter/dist/preact-html-converter.es5.js","webpack:///../node_modules/parse5/dist/common/error-codes.js","webpack:///../node_modules/parse5/dist/tokenizer/preprocessor.js","webpack:///../node_modules/parse5/dist/parser/open-element-stack.js","webpack:///../node_modules/parse5/dist/parser/formatting-element-list.js","webpack:///../node_modules/parse5/dist/index.js","webpack:///./routes/jam/jamulus.tsx","webpack:///./routes/jam/index.tsx","webpack:///https://raw.githubusercontent.com/fb55/entities/f85d378bc4dbe36a3a7b0f757114d3d71f950d31/src/decode.ts","webpack:///https://raw.githubusercontent.com/fb55/entities/f85d378bc4dbe36a3a7b0f757114d3d71f950d31/src/generated/decode-data-xml.ts"],"names":["replaceCodePoint","codePoint","get","_a","decodeMap","Map","exports","fromCodePoint","output","String","fromCharCode","encodeXML","str","match","ret","lastIdx","exec","i","index","char","charCodeAt","next","xmlCodeMap","undefined","substring","concat","toString","lastIndex","Number","substr","getEscaper","regex","map","data","result","prototype","codePointAt","c","Uint16Array","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","UNDEFINED_CODE_POINTS","has","getTokenAttr","token","attrName","attrs","length","name","value","getTagID","tagName","TAG_NAME_TO_ID","TAG_ID","UNKNOWN","isNumberedHeader","tn","$","H1","H2","H3","H4","H5","H6","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","isAsciiAlphaNumeric","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","toAsciiLower","isWhitespace","SPACE","LINE_FEED","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","createTextNode","nodeName","NodeType","Text","parentNode","hasPrefix","publicId","prefixes","some","prefix","startsWith","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","SVG_ATTRS_ADJUSTMENT_MAP","adjustTokenXMLAttrs","adjustedAttrEntry","XML_ATTRS_ADJUSTMENT_MAP","namespace","isIntegrationPoint","ns","foreignNS","NS","HTML","MATHML","ANNOTATION_XML","ATTRS","ENCODING","toLowerCase","MIME_TYPES","SVG","FOREIGN_OBJECT","DESC","TITLE","isHtmlIntegrationPoint","MI","MO","MN","MS","MTEXT","isMathMLTextIntegrationPoint","aaObtainFormattingElementEntry","p","formattingElementEntry","activeFormattingElements","getElementEntryInScopeWithTagName","openElements","contains","element","hasInScope","tagID","removeEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","idx","stackTop","items","_isSpecialElement","tagIDs","shortenToLength","aaInnerLoop","formattingElement","lastElement","nextElement","getCommonAncestor","elementEntry","getElementEntry","counterOverflow","remove","aaRecreateElementFromEntry","bookmark","treeAdapter","detachNode","appendChild","getNamespaceURI","newElement","createElement","replace","aaInsertLastNodeInCommonAncestor","commonAncestor","tid","getTagName","_isElementCausesFosterParenting","_fosterParentElement","TEMPLATE","getTemplateContent","aaReplaceFormattingElement","_adoptNodes","insertElementAfterBookmark","insertAfter","callAdoptionAgency","appendComment","_appendCommentNode","currentTmplContentOrNode","stopParsing","stopped","location","target","fragmentContext","_setEndLocation","htmlElement","htmlLocation","getNodeSourceCodeLocation","endTag","bodyElement","bodyLocation","doctypeInInitialMode","_setDocumentType","mode","forceQuirks","DOCUMENT_MODE","QUIRKS","VALID_DOCTYPE_NAME","systemId","QUIRKS_MODE_PUBLIC_IDS","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS","NO_QUIRKS","doctype","_err","ERR","nonConformingDoctype","setDocumentMode","document","insertionMode","InsertionMode","BEFORE_HTML","tokenInInitialMode","missingDoctype","_processToken","tokenBeforeHtml","_insertFakeRootElement","BEFORE_HEAD","tokenBeforeHead","_insertFakeElement","TN","HEAD","headElement","current","IN_HEAD","startTagInHead","startTagInBody","BASE","BASEFONT","BGSOUND","LINK","META","_appendElement","ackSelfClosing","_switchToTextParsing","TokenizerMode","RCDATA","NOSCRIPT","options","scriptingEnabled","RAWTEXT","_insertElement","IN_HEAD_NO_SCRIPT","NOFRAMES","STYLE","SCRIPT","SCRIPT_DATA","_insertTemplate","insertMarker","framesetOk","IN_TEMPLATE","tmplInsertionModeStack","unshift","misplacedStartTagForHeadElement","tokenInHead","endTagInHead","pop","AFTER_HEAD","BODY","BR","tmplCount","generateImpliedEndTagsThoroughly","currentTagId","closingOfElementWithOpenChildElements","popUntilTagNamePopped","clearToLastMarker","shift","_resetInsertionMode","endTagWithoutMatchingOpenElement","tokenInHeadNoScript","type","TokenType","EOF","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","tokenAfterHead","IN_BODY","modeInBody","CHARACTER","characterInBody","WHITESPACE_CHARACTER","whitespaceCharacterInBody","COMMENT","START_TAG","END_TAG","endTagInBody","eofInBody","_reconstructActiveFormattingElements","_insertCharacters","areaStartTagInBody","isHiddenInput","inputType","TYPE","noembedStartTagInBody","genericStartTagInBody","I","S","B","U","EM","TT","BIG","CODE","FONT","SMALL","STRIKE","STRONG","pushElement","bStartTagInBody","A","activeElementEntry","aStartTagInBody","hasInButtonScope","P","_closePElement","numberedHeaderStartTagInBody","DL","OL","UL","DIV","DIR","NAV","MAIN","MENU","ASIDE","CENTER","FIGURE","FOOTER","HEADER","HGROUP","DIALOG","DETAILS","ADDRESS","ARTICLE","SECTION","SUMMARY","FIELDSET","BLOCKQUOTE","FIGCAPTION","addressStartTagInBody","LI","DD","DT","elementId","generateImpliedEndTagsWithExclusion","listItemStartTagInBody","IMG","WBR","AREA","EMBED","KEYGEN","HR","hrStartTagInBody","RB","RTC","RUBY","generateImpliedEndTags","rbStartTagInBody","RT","RP","rtStartTagInBody","PRE","LISTING","skipNextNewLine","preStartTagInBody","XMP","xmpStartTagInBody","foreignContent","selfClosing","svgStartTagInBody","adoptAttributes","htmlStartTagInBody","tryPeekProperlyNestedBodyElement","bodyStartTagInBody","FORM","inTemplate","formElement","formStartTagInBody","NOBR","nobrStartTagInBody","MATH","mathStartTagInBody","TABLE","getDocumentMode","IN_TABLE","tableStartTagInBody","INPUT","inputStartTagInBody","PARAM","TRACK","SOURCE","paramStartTagInBody","IMAGE","imageStartTagInBody","BUTTON","buttonStartTagInBody","APPLET","OBJECT","MARQUEE","appletStartTagInBody","IFRAME","iframeStartTagInBody","SELECT","IN_CAPTION","IN_TABLE_BODY","IN_ROW","IN_CELL","IN_SELECT_IN_TABLE","IN_SELECT","selectStartTagInBody","OPTION","OPTGROUP","optgroupStartTagInBody","NOEMBED","FRAMESET","popAllUpToHtmlElement","IN_FRAMESET","framesetStartTagInBody","TEXTAREA","tokenizer","state","originalInsertionMode","TEXT","textareaStartTagInBody","PLAINTEXT","plaintextStartTagInBody","COL","TH","TD","TR","FRAME","TBODY","TFOOT","THEAD","CAPTION","COLGROUP","pEndTagInBody","addressEndTagInBody","hasInListItemScope","liEndTagInBody","ddEndTagInBody","hasNumberedHeaderInScope","popUntilNumberedHeaderPopped","numberedHeaderEndTagInBody","brEndTagInBody","AFTER_BODY","sourceCodeLocationInfo","bodyEndTagInBody","endTagAfterBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","eofInTemplate","characterInTable","TABLE_STRUCTURE_TAGS","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","IN_TABLE_TEXT","characterInTableText","whitespaceCharacterInTableText","tokenInTable","startTagInTable","clearBackToTableContext","startTagInTableBody","tdStartTagInTable","IN_COLUMN_GROUP","startTagInColumnGroup","colStartTagInTable","formStartTagInTable","hasInTableScope","_processStartTag","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","endTagInTable","savedFosterParentingState","fosterParentingEnabled","push","tokenInTableText","tokenInColumnGroup","clearBackToTableBodyContext","startTagInRow","hasTableBodyContextInTableScope","endTagInTableBody","clearBackToTableRowContext","endTagInRow","startTagInSelect","hasInSelectScope","endTagInSelect","onEof","AFTER_AFTER_BODY","tokenAfterBody","tokenAfterAfterBody","popUntilHtmlOrIntegrationPoint","_isIntegrationPoint","startTagInForeignContent","startTagToken","COLOR","SIZE","FACE","EXITS_FOREIGN_CONTENT","_startTagOutsideForeignContent","_getAdjustedCurrentElement","currentNs","adjustedTagName","SVG_TAG_NAMES_ADJUSTMENT_MAP","isVoidElement","node","isElementNode","VOID_ELEMENTS","serializeChildNodes","html","container","childNodes","getChildNodes","currentNode","serializeNode","attr","getAttrList","XML","XMLNS","XLINK","escapeAttribute","serializeAttributes","serializeElement","isTextNode","content","getTextNodeContent","parent","getParentNode","parentTn","UNESCAPED_TEXT","TAG_NAMES","escapeText","serializeTextNode","isCommentNode","getCommentNodeContent","serializeCommentNode","isDocumentTypeNode","getDocumentTypeNodeName","serializeDocumentTypeNode","BaseConverter","parser","registeredComponents","convert","htmlString","trimHTMLString","fragment","parseFragment","rootNode","nodeTree","Array","convertNode","traverseNodeTree","filter","registerComponent","component","set","Set","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","Preprocessor","constructor","handler","this","pos","lastGapPos","gapStack","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","line","lastErrOffset","col","offset","getError","code","startLine","endLine","startCol","endCol","startOffset","endOffset","onParseError","_addGap","_processSurrogate","nextCp","isSurrogatePair","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","write","chunk","isLastChunk","insertHtmlAtCurrentPos","pattern","caseSensitive","peek","advance","CARRIAGE_RETURN","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","count","LABEL","MALIGNMARK","MGLYPH","SPAN","SUB","SUP","VAR","SPECIAL_ELEMENTS","C1_CONTROLS_REFERENCE_REPLACEMENTS","State","DATA","CDATA_SECTION","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","returnState","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","_b","call","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","resume","writeCallback","Error","_unconsume","_reconsumeInState","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","_createEndTagToken","_createCommentToken","_createDoctypeToken","initialName","DOCTYPE","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","Object","create","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","onCharacter","NULL_CHARACTER","onNullCharacter","onWhitespaceCharacter","_emitEOFToken","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","NULL","_emitChars","_matchNamedCharacterReference","excess","withoutSemicolon","htmlDecodeTree","determineBranch","masked","BinTrieFlags","VALUE_LENGTH","valueLength","SEMICOLON","_isCharacterReferenceInAttribute","EQUALS_SIGN","AMPERSAND","missingSemicolonAfterCharacterReference","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_flushCodePointConsumedAsCharacterReference","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","DECIMAL_CHARACTER_REFERENCE_START","_stateDecimalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","matchResult","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","isAsciiHexDigit","absenceOfDigitsInNumericCharacterReference","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","replacement","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","_isInTemplate","_indexOf","lastIndexOf","_updateCurrentElement","onItemPush","popped","onItemPop","oldElement","referenceElement","newElementID","insertionIdx","splice","targetIdx","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilTableCellPopped","includes","clearBackTo","elementIdx","isRootHtmlElementCurrent","exclusionId","EntryType","MARKER","Marker","FormattingElementList","entries","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","neNamespaceURI","entry","elementAttrs","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","Element","bookmarkIdx","indexOf","entryIndex","markerIdx","find","defaultTreeAdapter","createDocument","Document","createDocumentFragment","DocumentFragment","namespaceURI","createCommentNode","Comment","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","DocumentType","insertText","text","prevNode","insertTextBefore","recipient","recipientAttrsMap","j","getFirstChild","textNode","commentNode","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","hasOwnProperty","setNodeSourceCodeLocation","sourceCodeLocation","updateNodeSourceCodeLocation","endLocation","BASE_LOC","defaultParserOptions","Parser","scriptHandler","INITIAL","currentNotInHTML","fragmentContextID","_setContextModes","opts","documentMock","_initTokenizerForFragmentParsing","_findFormInFragmentContext","getFragment","rootElement","beforeToken","loc","isTop","isHTML","nextTokenizerState","switchToPlaintextParsing","docTypeNode","_attachElementToTree","startTag","_shouldFosterParentOnInsertion","tmpl","beforeElement","_findFosterParentingLocation","siblings","textNodeIdx","donor","child","closingToken","ctLoc","endLoc","shouldProcessStartTagTokenInForeignContent","listLength","endIndex","findIndex","_closeTableCell","_resetInsertionModeForSelect","selectIdx","openElement","id","characterInForeignContent","unicode","nullCharacterInForeignContent","AFTER_FRAMESET","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagBeforeHtml","startTagBeforeHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","startTagAfterHead","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInCell","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagBeforeHead","endTagInHeadNoScript","endTagAfterHead","endTagInText","endTagInCaption","endTagInColumnGroup","endTagInCell","endTagInSelectInTable","endTagInTemplate","endTagInFrameset","endTagAfterFrameset","eofInElementThatCanContainOnlyText","eofInText","defaultOpts","getFragmentParser","serialize","convertAttributes","attributes","key","convAttrs","split","reduce","obj","styleDeclaration","parts","keyCharacters","trim","toUpperCase","join","convertElement","h","children","isElement","JamulusStatus","statusHTML","setStatusHTML","useState","statusFetchAborter","AbortController","useEffect","timeoutID","alive","refresh","fetch","then","setTimeout","catch","error","abort","window","clearTimeout","class","Jam","Helmet","title","href","rel","getDecoder","decodeTree","strict","strIdx","slice","CharCodes","NUM","resultIdx","treeIdx","SEMI","start","base","To_LOWER_BIT","LOWER_X","ZERO","NINE","LOWER_A","LOWER_F","entity","parsed","parseInt","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","decode_data_html_js_1","decode_data_xml_js_1","decode_codepoint_js_1","htmlDecoder","xmlDecoder"],"mappings":"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BACA,8BACA,8BACA,8BACA,8BACA,qCACA,qCACA,qCACA,qCACA,6BACA,sBACA,2CACA,wDACA,iDACA,mDACA,wDACA,iDACA,mDACA,sCACA,6CACA,6CACA,sDACA,8DACA,8CACA,iFACA,wEACA,uCACA,gDACA,uDACA,kCACA,+BACA,+BACA,yBACA,gCACA,kCACA,sCACA,2CACA,yCACA,wBACA,4BACA,sCACA,mCAEED,GAA8C,IAC7CC,GACH,mCACA,wCAEEF,GAAyB,IAAI4W,IAAI,CACnC,uCACA,qCACA,SAEEzW,GAAoC,CAAC,mCAAoC,wCACzEC,GAAmD,IAClDD,GACH,mCACA,wCC1EEzF,GACS,YADTA,GAEe,wBAKff,GAA2B,IAAInG,IAAI,CACrC,gBACA,gBACA,gBACA,cACA,WACA,gBACA,kBACA,WACA,cACA,WACA,oBACA,gBACA,eACA,mBACA,YACA,aACA,WACA,eACA,oBACA,eACA,cACA,cACA,mBACA,YACA,aACA,aACA,sBACA,mBACA,eACA,YACA,YACA,YACA,gBACA,sBACA,iBACA,OACA,OACA,cACA,YACA,qBACA,mBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,eACA,iBACA,cACA,UACA,UACA,aACA,UACA,aACA,mBACA,mBACA,cACF2B,KAAKgf,GAAS,CAACA,EAAK1Z,cAAe0Z,MAC/Bra,GAA2B,IAAItG,IAAI,CACrC,CAAC,gBAAiB,CAAE8F,OAAQ,QAASjD,KAAM,UAAW0D,UAAWI,GAAGoa,QACpE,CAAC,gBAAiB,CAAEjb,OAAQ,QAASjD,KAAM,UAAW0D,UAAWI,GAAGoa,QACpE,CAAC,aAAc,CAAEjb,OAAQ,QAASjD,KAAM,OAAQ0D,UAAWI,GAAGoa,QAC9D,CAAC,aAAc,CAAEjb,OAAQ,QAASjD,KAAM,OAAQ0D,UAAWI,GAAGoa,QAC9D,CAAC,aAAc,CAAEjb,OAAQ,QAASjD,KAAM,OAAQ0D,UAAWI,GAAGoa,QAC9D,CAAC,cAAe,CAAEjb,OAAQ,QAASjD,KAAM,QAAS0D,UAAWI,GAAGoa,QAChE,CAAC,aAAc,CAAEjb,OAAQ,QAAS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","file":"route-jam.chunk.5cef8.js","sourcesContent":[null,null,null,"const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE_START\"] = 76] = \"DECIMAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 77] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 78] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 79] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state) {\n        this.state = state;\n        this._unconsume(1);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        let type = TokenType.CHARACTER;\n        if (isWhitespace(cp)) {\n            type = TokenType.WHITESPACE_CHARACTER;\n        }\n        else if (cp === $.NULL) {\n            type = TokenType.NULL_CHARACTER;\n        }\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE_START: {\n                this._stateDecimalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd();\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        else {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE_START;\n            this._stateDecimalCharacterReferenceStart(cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Decimal character reference start state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReferenceStart(cp) {\n        if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState);\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd();\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd();\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd() {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState);\n    }\n}\n//# sourceMappingURL=index.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nexport var NodeType;\n(function (NodeType) {\n    NodeType[\"Document\"] = \"#document\";\n    NodeType[\"DocumentFragment\"] = \"#document-fragment\";\n    NodeType[\"Comment\"] = \"#comment\";\n    NodeType[\"Text\"] = \"#text\";\n    NodeType[\"DocumentType\"] = \"#documentType\";\n})(NodeType || (NodeType = {}));\nfunction createTextNode(value) {\n    return {\n        nodeName: NodeType.Text,\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: NodeType.Document,\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: NodeType.DocumentFragment,\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: NodeType.Comment,\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === NodeType.DocumentType);\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: NodeType.DocumentType,\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === NodeType.DocumentType;\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR:\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT:\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                case $.CAPTION:\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                case $.COLGROUP:\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                case $.TABLE:\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                case $.BODY:\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                case $.FRAMESET:\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                case $.SELECT:\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                case $.TEMPLATE:\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                case $.HTML:\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                case $.TD:\n                case $.TH:\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                case $.HEAD:\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE:\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n                tokenInInitialMode(this, token);\n                break;\n            case InsertionMode.BEFORE_HTML:\n                tokenBeforeHtml(this, token);\n                break;\n            case InsertionMode.BEFORE_HEAD:\n                tokenBeforeHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD:\n                tokenInHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                tokenInHeadNoScript(this, token);\n                break;\n            case InsertionMode.AFTER_HEAD:\n                tokenAfterHead(this, token);\n                break;\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n                characterInBody(this, token);\n                break;\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n                this._insertCharacters(token);\n                break;\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n                characterInTable(this, token);\n                break;\n            case InsertionMode.IN_TABLE_TEXT:\n                characterInTableText(this, token);\n                break;\n            case InsertionMode.IN_COLUMN_GROUP:\n                tokenInColumnGroup(this, token);\n                break;\n            case InsertionMode.AFTER_BODY:\n                tokenAfterBody(this, token);\n                break;\n            case InsertionMode.AFTER_AFTER_BODY:\n                tokenAfterAfterBody(this, token);\n                break;\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n                tokenInInitialMode(this, token);\n                break;\n            case InsertionMode.BEFORE_HTML:\n                tokenBeforeHtml(this, token);\n                break;\n            case InsertionMode.BEFORE_HEAD:\n                tokenBeforeHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD:\n                tokenInHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                tokenInHeadNoScript(this, token);\n                break;\n            case InsertionMode.AFTER_HEAD:\n                tokenAfterHead(this, token);\n                break;\n            case InsertionMode.TEXT:\n                this._insertCharacters(token);\n                break;\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n                characterInTable(this, token);\n                break;\n            case InsertionMode.IN_COLUMN_GROUP:\n                tokenInColumnGroup(this, token);\n                break;\n            case InsertionMode.AFTER_BODY:\n                tokenAfterBody(this, token);\n                break;\n            case InsertionMode.AFTER_AFTER_BODY:\n                tokenAfterAfterBody(this, token);\n                break;\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n                appendComment(this, token);\n                break;\n            case InsertionMode.IN_TABLE_TEXT:\n                tokenInTableText(this, token);\n                break;\n            case InsertionMode.AFTER_BODY:\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET:\n                appendCommentToDocument(this, token);\n                break;\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n                doctypeInInitialMode(this, token);\n                break;\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            case InsertionMode.IN_TABLE_TEXT:\n                tokenInTableText(this, token);\n                break;\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n                tokenInInitialMode(this, token);\n                break;\n            case InsertionMode.BEFORE_HTML:\n                startTagBeforeHtml(this, token);\n                break;\n            case InsertionMode.BEFORE_HEAD:\n                startTagBeforeHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD:\n                startTagInHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                startTagInHeadNoScript(this, token);\n                break;\n            case InsertionMode.AFTER_HEAD:\n                startTagAfterHead(this, token);\n                break;\n            case InsertionMode.IN_BODY:\n                startTagInBody(this, token);\n                break;\n            case InsertionMode.IN_TABLE:\n                startTagInTable(this, token);\n                break;\n            case InsertionMode.IN_TABLE_TEXT:\n                tokenInTableText(this, token);\n                break;\n            case InsertionMode.IN_CAPTION:\n                startTagInCaption(this, token);\n                break;\n            case InsertionMode.IN_COLUMN_GROUP:\n                startTagInColumnGroup(this, token);\n                break;\n            case InsertionMode.IN_TABLE_BODY:\n                startTagInTableBody(this, token);\n                break;\n            case InsertionMode.IN_ROW:\n                startTagInRow(this, token);\n                break;\n            case InsertionMode.IN_CELL:\n                startTagInCell(this, token);\n                break;\n            case InsertionMode.IN_SELECT:\n                startTagInSelect(this, token);\n                break;\n            case InsertionMode.IN_SELECT_IN_TABLE:\n                startTagInSelectInTable(this, token);\n                break;\n            case InsertionMode.IN_TEMPLATE:\n                startTagInTemplate(this, token);\n                break;\n            case InsertionMode.AFTER_BODY:\n                startTagAfterBody(this, token);\n                break;\n            case InsertionMode.IN_FRAMESET:\n                startTagInFrameset(this, token);\n                break;\n            case InsertionMode.AFTER_FRAMESET:\n                startTagAfterFrameset(this, token);\n                break;\n            case InsertionMode.AFTER_AFTER_BODY:\n                startTagAfterAfterBody(this, token);\n                break;\n            case InsertionMode.AFTER_AFTER_FRAMESET:\n                startTagAfterAfterFrameset(this, token);\n                break;\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n                tokenInInitialMode(this, token);\n                break;\n            case InsertionMode.BEFORE_HTML:\n                endTagBeforeHtml(this, token);\n                break;\n            case InsertionMode.BEFORE_HEAD:\n                endTagBeforeHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD:\n                endTagInHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                endTagInHeadNoScript(this, token);\n                break;\n            case InsertionMode.AFTER_HEAD:\n                endTagAfterHead(this, token);\n                break;\n            case InsertionMode.IN_BODY:\n                endTagInBody(this, token);\n                break;\n            case InsertionMode.TEXT:\n                endTagInText(this, token);\n                break;\n            case InsertionMode.IN_TABLE:\n                endTagInTable(this, token);\n                break;\n            case InsertionMode.IN_TABLE_TEXT:\n                tokenInTableText(this, token);\n                break;\n            case InsertionMode.IN_CAPTION:\n                endTagInCaption(this, token);\n                break;\n            case InsertionMode.IN_COLUMN_GROUP:\n                endTagInColumnGroup(this, token);\n                break;\n            case InsertionMode.IN_TABLE_BODY:\n                endTagInTableBody(this, token);\n                break;\n            case InsertionMode.IN_ROW:\n                endTagInRow(this, token);\n                break;\n            case InsertionMode.IN_CELL:\n                endTagInCell(this, token);\n                break;\n            case InsertionMode.IN_SELECT:\n                endTagInSelect(this, token);\n                break;\n            case InsertionMode.IN_SELECT_IN_TABLE:\n                endTagInSelectInTable(this, token);\n                break;\n            case InsertionMode.IN_TEMPLATE:\n                endTagInTemplate(this, token);\n                break;\n            case InsertionMode.AFTER_BODY:\n                endTagAfterBody(this, token);\n                break;\n            case InsertionMode.IN_FRAMESET:\n                endTagInFrameset(this, token);\n                break;\n            case InsertionMode.AFTER_FRAMESET:\n                endTagAfterFrameset(this, token);\n                break;\n            case InsertionMode.AFTER_AFTER_BODY:\n                tokenAfterAfterBody(this, token);\n                break;\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n                tokenInInitialMode(this, token);\n                break;\n            case InsertionMode.BEFORE_HTML:\n                tokenBeforeHtml(this, token);\n                break;\n            case InsertionMode.BEFORE_HEAD:\n                tokenBeforeHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD:\n                tokenInHead(this, token);\n                break;\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                tokenInHeadNoScript(this, token);\n                break;\n            case InsertionMode.AFTER_HEAD:\n                tokenAfterHead(this, token);\n                break;\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n                eofInBody(this, token);\n                break;\n            case InsertionMode.TEXT:\n                eofInText(this, token);\n                break;\n            case InsertionMode.IN_TABLE_TEXT:\n                tokenInTableText(this, token);\n                break;\n            case InsertionMode.IN_TEMPLATE:\n                eofInTemplate(this, token);\n                break;\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET:\n                stopParsing(this, token);\n                break;\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n                this._insertCharacters(token);\n                break;\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET:\n                whitespaceCharacterInBody(this, token);\n                break;\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n                characterInTable(this, token);\n                break;\n            case InsertionMode.IN_TABLE_TEXT:\n                whitespaceCharacterInTableText(this, token);\n                break;\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            if (p.openElements.tmplCount > 0) {\n                p.openElements.generateImpliedEndTagsThoroughly();\n                if (p.openElements.currentTagId !== $.TEMPLATE) {\n                    p._err(token, ERR.closingOfElementWithOpenChildElements);\n                }\n                p.openElements.popUntilTagNamePopped($.TEMPLATE);\n                p.activeFormattingElements.clearToLastMarker();\n                p.tmplInsertionModeStack.shift();\n                p._resetInsertionMode();\n            }\n            else {\n                p._err(token, ERR.endTagWithoutMatchingOpenElement);\n            }\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            endTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            endTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            endTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            endTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default:\n            endTagInTable(p, token);\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            endTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE:\n            startTagInHead(p, token);\n            break;\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        case $.COL:\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        case $.TR:\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        case $.TD:\n        case $.TH:\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        default:\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        endTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","import { parseFragment, serialize } from 'parse5';\nimport { h } from 'preact';\n\nvar parser = {\r\n    parseFragment: function (htmlString) {\r\n        return parseFragment(htmlString);\r\n    },\r\n    serialize: function (element) {\r\n        return serialize(element);\r\n    }\r\n};\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar NodeType;\r\n(function (NodeType) {\r\n    NodeType[\"Text\"] = \"#text\";\r\n    NodeType[\"Comment\"] = \"#comment\";\r\n})(NodeType || (NodeType = {}));\r\nvar convertStylesToObject = function (styles) {\r\n    return styles\r\n        .split(\";\")\r\n        .reduce(function (obj, styleDeclaration) {\r\n        if (styleDeclaration) {\r\n            var parts = styleDeclaration.split(\":\");\r\n            var key = parts[0].trim();\r\n            var keyCharacters = key.split(\"\");\r\n            for (var i = 0; i < keyCharacters.length; i++) {\r\n                if (keyCharacters[i] === \"-\") {\r\n                    keyCharacters[i + 1] = keyCharacters[i + 1].toUpperCase();\r\n                    keyCharacters[i] = null;\r\n                }\r\n            }\r\n            obj[keyCharacters.join(\"\")] = parts[1];\r\n        }\r\n        return obj;\r\n    }, {});\r\n};\r\nvar trimHTMLString = function (html) {\r\n    html = html.replace(/\\n|\\t|\\r|\\0/g, \"\");\r\n    return html;\r\n};\r\nvar assign = function (target, source) { return (__assign({}, target, source)); };\n\nvar convertAttributes = function (attributes, key) {\r\n    var convAttrs = {\r\n        key: key.toString()\r\n    };\r\n    if (!attributes)\r\n        return convAttrs;\r\n    for (var i = 0; i < attributes.length; i++) {\r\n        convAttrs[attributes[i].name] = (attributes[i].name === \"style\") ? convertStylesToObject(attributes[i].value) : attributes[i].value;\r\n    }\r\n    return convAttrs;\r\n};\r\nvar convertElement = function (element, key, registeredComponents) {\r\n    var component = registeredComponents.get(element.nodeName.toLowerCase());\r\n    var attributes = convertAttributes(element.attrs, key);\r\n    var tagName = element.tagName.toLowerCase();\r\n    if (element.childNodes.length === 0) {\r\n        return component ? h(component, attributes) : h(tagName, attributes);\r\n    }\r\n    var children = new Array();\r\n    for (var i = 0; i < element.childNodes.length; i++) {\r\n        children.push(convertNode(element.childNodes[i], i, registeredComponents));\r\n    }\r\n    return component ? h(component, attributes, children) : h(tagName, attributes, children);\r\n};\r\nvar convertNode = function (node, key, registeredComponents) {\r\n    if (isTextNode(node) && node.value.trim() !== \"\") {\r\n        return node.value;\r\n    }\r\n    if (isElement(node)) {\r\n        return convertElement(node, key, registeredComponents);\r\n    }\r\n    return null;\r\n};\r\nvar traverseNodeTree = function (rootNode, registeredComponents) {\r\n    var nodeTree = new Array();\r\n    for (var i = 0; i < rootNode.childNodes.length; i++) {\r\n        nodeTree.push(convertNode(rootNode.childNodes[i], i, registeredComponents));\r\n    }\r\n    return nodeTree;\r\n};\r\nvar isTextNode = function (node) {\r\n    return node.nodeName === NodeType.Text && node.value !== undefined;\r\n};\r\nvar isElement = function (node) {\r\n    return node.attrs !== undefined;\r\n};\r\nfunction BaseConverter(parser) {\r\n    var registeredComponents = new Map();\r\n    return {\r\n        convert: function (htmlString) {\r\n            if (typeof htmlString !== \"string\") {\r\n                return null;\r\n            }\r\n            htmlString = trimHTMLString(htmlString);\r\n            var fragment = parser.parseFragment(htmlString);\r\n            if (fragment.childNodes.length > 0) {\r\n                return traverseNodeTree(fragment, registeredComponents).filter(function (value) {\r\n                    return value ? true : false;\r\n                });\r\n            }\r\n            return null;\r\n        },\r\n        registerComponent: function (name, component) {\r\n            registeredComponents.set(name.toLowerCase(), component);\r\n        }\r\n    };\r\n}\r\nfunction baseConvertStatic(htmlString, parser) {\r\n    if (typeof htmlString !== \"string\") {\r\n        return null;\r\n    }\r\n    htmlString = trimHTMLString(htmlString);\r\n    var fragment = parser.parseFragment(htmlString);\r\n    if (fragment.childNodes.length > 0) {\r\n        var rootElement = void 0;\r\n        if (fragment.childNodes.length === 1) {\r\n            var element = fragment.childNodes[0];\r\n            rootElement = h(element.nodeName.toLowerCase(), assign({\r\n                dangerouslySetInnerHTML: {\r\n                    __html: parser.serialize(element)\r\n                }\r\n            }, convertAttributes(element.attrs, 0)));\r\n        }\r\n        else {\r\n            rootElement = h(\"div\", { dangerouslySetInnerHTML: { __html: htmlString } });\r\n        }\r\n        return rootElement;\r\n    }\r\n    return null;\r\n}\n\nvar PreactHTMLConverter = function () { return BaseConverter(parser); };\r\nvar convertStatic = function (htmlString) { return baseConvertStatic(htmlString, parser); };\n\nexport { PreactHTMLConverter, convertStatic };\n","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        return this.html.charCodeAt(pos);\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\n/** @internal */\nexport * as html from './common/html.js';\n/** @internal */\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n//# sourceMappingURL=index.js.map","import { FunctionalComponent, h } from 'preact'\nimport { useEffect, useState } from 'preact/hooks'\nimport { PreactHTMLConverter } from 'preact-html-converter'\n\nconst JamulusStatus: FunctionalComponent = () => {\n  const [statusHTML, setStatusHTML] = useState<string>('Loading...')\n  const statusFetchAborter = new AbortController()\n\n  useEffect(() => {\n    let alive = true\n    let timeoutID: ReturnType<typeof setTimeout>\n\n    const refresh = (): void => {\n      if (!alive) return\n      fetch(\n        'https://psilly.com/jam/jamulus-status.html',\n        statusFetchAborter\n      )\n        .then(data => alive ? data.text() : 'ded')\n        .then(html => {\n          if (alive) {\n            setStatusHTML(html || '<p>Error fetching server status</p>')\n            timeoutID = setTimeout(refresh, 1<<14)\n          }\n        })\n        .catch((error: string) => {\n          if (alive) setStatusHTML(`<p>Error: ${error}</p>`)\n        })\n    }\n    refresh()\n\n    return (): void => {\n      alive = false\n      statusFetchAborter.abort()\n      window.clearTimeout(timeoutID)\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div class=\"jamulus-status\">\n      {PreactHTMLConverter().convert(statusHTML)}\n    </div>\n  )\n}\n\nexport default JamulusStatus\n","import { FunctionalComponent, h } from 'preact'\nimport Helmet from 'react-helmet'\nimport JamulusStatus from './jamulus'\n\nconst Jam: FunctionalComponent = () => {\n  return (\n    <section class=\"container py-5\">\n      <Helmet title=\"Jam\" />\n      <h1>Psilly Jams</h1>\n      <p>I wanna jam it with you!</p><p>Get an instrument hooked up and join our <a href=\"https://jamulus.io/\">Jamulus</a> server. The server is in Montréal, so for best results, live near here. N'est-ce pas?</p>\n      <pre>The server is \"Psilly 🍄\" (psilly.com:22124) on the \"Any Genre 1\" directory (anygenre1.jamulus.io:22124).</pre>\n      <h2>Who's Jammin' Now?</h2>\n      <div class=\"mb-2\">\n        <JamulusStatus />\n      </div>\n      <h2>Server Status</h2>\n      <div class=\"list-group mb-3\">\n        <a class=\"list-group-item list-group-item-action\" href=\"/jam/jamulus-status.html\" target=\"_blank\">HTML status</a>\n        <a class=\"list-group-item list-group-item-action\" href=\"https://explorer.jamulus.io/servers.php?query=psilly.com\" target=\"_blank\" rel=\"noreferrer\">Jamulus.io Explorer Status</a>\n      </div>\n      <h2>Issues</h2>\n      <p>Let me know of any trouble you have with the server, my email is <a href=\"mailto:dylan@psilly.com\">dylan@psilly.com</a>.</p>\n      <h2>Psilly Confiture</h2>\n      <p>Psilly Jams are not necessarily preparations made by preserving psilocybe mushrooms with sugar; jam or marmalade, but they are <em>not necessarily not</em> as well.</p>\n    </section>\n  )\n}\n\nexport default Jam",null,null],"sourceRoot":""}