{"version":3,"sources":["webpack:///./routes/chat/style.css","webpack:///./routes/chat/index.tsx"],"names":["ChatItem","props","item","color","substr","message","length","style","Chat","ref","createRef","inputRef","statusRef","useState","items","setItems","chatFetchAborter","AbortController","useEffect","renderCallbackID","renderTimeoutID","updateTimeoutID","element","current","inputElement","statusElement","alive","paused","connected","mouseDown","mouseLeftDownY","lastMessage","position","velocity","Math","random","acceleration","free","handleBlur","window","addEventListener","handleFocus","handleMouseDown","event","button","clientY","preventDefault","handleMouseUp","focus","handleContextMenu","handleMouseMove","backgroundPosition","handleTouchDown","touches","pageY","handleTouchUp","handleTouchMove","render","setTimeout","requestAnimationFrame","abs","update","params","value","encodeURIComponent","fetch","then","res","json","data","innerText","display","catch","err","console","error","alert","location","reload","cancelAnimationFrame","abort","clearTimeout","removeEventListener","class","title","autofocus","map","key"],"mappings":"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","file":"route-chat.chunk.c2961.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chat\":\"chat__LjROG\"};","import { FunctionalComponent, createRef, h } from 'preact'\nimport { useEffect, useState } from 'preact/hooks'\nimport Helmet from 'preact-helmet'\nimport style from './style.css'\n\ninterface ChatItemProps {\n  item: string;\n}\n\nconst ChatItem: FunctionalComponent<ChatItemProps> = (props: ChatItemProps) => {\n  const { item } = props\n  const color = item.substr(-6)\n  const message = item.substr(0, item.length-6)\n  return <li style={{color: `#${color}`}}>{message}</li>\n}\n\nconst Chat: FunctionalComponent = () => {\n  const ref = createRef<HTMLElement>()\n  const inputRef = createRef<HTMLInputElement>()\n  const statusRef = createRef<HTMLParagraphElement>()\n  const [items, setItems] = useState<string[]>([])\n  const chatFetchAborter = new AbortController()\n\n  useEffect(() => {\n    const element = ref.current as HTMLElement\n    const inputElement = inputRef.current as HTMLInputElement\n    const statusElement = statusRef.current as HTMLParagraphElement\n    const refreshMs = 128\n    const terminalVelocity = 256\n    let alive = true\n    let paused = false\n    let connected = false\n    let mouseDown = 0\n    let mouseLeftDownY = 0\n    let lastMessage = ''\n    let renderCallbackID: number\n    let renderTimeoutID: ReturnType<typeof setTimeout>\n    let updateTimeoutID: ReturnType<typeof setTimeout>\n    let position = 0\n    let velocity = .5 - Math.random()\n    let acceleration = (.5 - Math.random()) / 8\n    let free = true\n    \n    const handleBlur = (): void => {\n      paused = true\n    }\n    window.addEventListener('blur', handleBlur)\n\n    const handleFocus = (): void => {\n      paused = false\n    }\n    window.addEventListener('focus', handleFocus)\n\n    const handleMouseDown = (event: MouseEvent): boolean => {\n      mouseDown |= (1<<event.button)\n      if (event.button===0) {\n        mouseLeftDownY = event.clientY\n      }\n      event.preventDefault()\n      return false\n    }\n    window.addEventListener('mousedown', handleMouseDown)\n\n    const handleMouseUp = (event: MouseEvent): boolean => {\n      mouseDown ^= (1<<event.button)\n      if (event.button===0) {\n        acceleration = 0\n        velocity *= 2 // flick\n      }\n      inputElement.focus()\n      event.preventDefault()\n      return false\n    }\n    window.addEventListener('mouseup', handleMouseUp)\n\n    const handleContextMenu = (event: MouseEvent): boolean => {\n      event.preventDefault()\n      return false\n    }\n    window.addEventListener('contextmenu', handleContextMenu)\n\n    const handleMouseMove = (event: MouseEvent): void => {\n      if (mouseDown&1) {\n        velocity = event.clientY - mouseLeftDownY\n        mouseLeftDownY = event.clientY\n        position += velocity\n        element.style.backgroundPosition = `0 ${position}px`\n      }\n    }\n    window.addEventListener('mousemove', handleMouseMove)\n\n    const handleTouchDown = (event: TouchEvent): boolean => {\n      void(event)\n      free = false\n      mouseLeftDownY = event.touches[0].pageY\n      return false\n    }\n    window.addEventListener('touchstart', handleTouchDown)\n\n    const handleTouchUp = (event: TouchEvent): boolean => {\n      void(event)\n      free = true\n      acceleration = 0\n      velocity *= 2 // flick\n      return false\n    }\n    window.addEventListener('touchend', handleTouchUp)\n\n    const handleTouchMove = (event: TouchEvent): void => {\n      if (event.touches.length===1) {\n        velocity = event.touches[0].pageY - mouseLeftDownY\n        mouseLeftDownY = event.touches[0].pageY \n        position += velocity\n        element.style.backgroundPosition = `0 ${position}px`\n      }\n    }\n    window.addEventListener('touchmove', handleTouchMove)\n\n    const draw = (): void => {\n      if (!(mouseDown&1)&&free) {\n        velocity += acceleration\n        position += velocity\n        // dampen\n        if (Math.abs(velocity) > terminalVelocity && velocity * acceleration >= 0) {\n          acceleration = -velocity * Math.random() / 128\n        }\n        element.style.backgroundPosition = `0 ${position}px`\n      }\n    }\n\n    const render = (): void => {\n      if (paused) {\n        renderTimeoutID = setTimeout(render, 512)\n      }\n      else {\n        renderCallbackID = window.requestAnimationFrame(render)\n        draw()\n      }\n    }\n    render()\n\n    const update = (): void => {\n      if (paused) {\n        if (alive) updateTimeoutID = setTimeout(update, refreshMs)\n        return\n      }\n      let params = '?r'\n      if (lastMessage!==inputElement.value) {\n        params += `&s=${encodeURIComponent(inputElement.value)}`\n        lastMessage = inputElement.value\n      }\n      fetch(\n        `https://psilly.com/experiments/ajax/chatter_chat.pill${params}`,\n        chatFetchAborter\n      )\n        .then(res => res.json())\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        .then(data => setItems(data || []))\n        .then(() => {\n          if (!alive) return\n          if (!connected) {\n            connected = true\n            statusElement.innerText = ''\n            statusElement.style.display = 'none'\n          }\n        })\n        .then(() => {\n          if (alive) updateTimeoutID = setTimeout(update, 1028)\n        })\n        .catch(err => {\n          if (!alive) return\n          connected = false\n          statusElement.innerText = err as string\n          statusElement.style.display = 'block'\n          console.error(err)\n          alert('Error connecting to server.\\nYou may have lost your connection, or perhaps you dislike cookies?\\nRefresh the page, with cookies enabled, to try again.')\n          location.reload()\n        })\n    }\n    update()\n\n    statusElement.innerText = 'Connecting...'\n    inputElement.focus()\n\n    return (): void => {\n      alive = false\n      window.cancelAnimationFrame(renderCallbackID)\n      chatFetchAborter.abort()\n      clearTimeout(renderTimeoutID)\n      clearTimeout(updateTimeoutID)\n      window.removeEventListener('blur', handleBlur)\n      window.removeEventListener('focus', handleFocus)\n      window.removeEventListener('mousedown', handleMouseDown)\n      window.removeEventListener('mouseup', handleMouseUp)\n      window.removeEventListener('contextmenu', handleContextMenu)\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('touchstart', handleTouchDown)\n      window.removeEventListener('touchend', handleTouchUp)\n      window.removeEventListener('touchmove', handleTouchMove)\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <section ref={ref} class={style.chat}>\n      <Helmet title=\"Chatter\" />\n      <input ref={inputRef} autofocus />\n      <ul class=\"output\">\n        {items.map(item => (\n          <ChatItem item={item} key={item} />\n        ))}\n      </ul>\n      <p ref={statusRef} class=\"text-center\">A colourful ape input aggregator.</p>\n    </section>\n  )\n}\n\nexport default Chat\n"],"sourceRoot":""}