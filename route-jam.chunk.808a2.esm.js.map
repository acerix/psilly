{"version":3,"sources":["webpack:///./routes/jam/jamulus.tsx","webpack:///./routes/jam/index.tsx"],"names":["JamulusStatus","statusHTML","setStatusHTML","useState","statusFetchAborter","AbortController","useEffect","timeoutID","alive","refresh","fetch","then","data","text","html","setTimeout","catch","error","abort","window","clearTimeout","dangerouslySetInnerHTML","__html","Jam","class","Helmet","title","href","target","rel"],"mappings":"2IA8CeA,MA1C4B,KACzC,MAAOC,EAAYC,GAAiBC,YAAiB,cAC/CC,EAAqB,IAAIC,gBAmC/B,OAjCAC,aAAU,KACR,IACIC,EADAC,GAAQ,EAGZ,MAAMC,EAAU,KACTD,GACLE,MACE,6CACAN,GAECO,MAAKC,GAAQJ,EAAQI,EAAKC,OAAS,QACnCF,MAAKG,IACAN,IACFN,EAAcY,GAAQ,uCACtBP,EAAYQ,WAAWN,EAAS,WAGnCO,OAAOC,IACFT,GAAON,EAAe,aAAYe,aAK5C,OAFAR,IAEO,KACLD,GAAQ,EACRJ,EAAmBc,QACnBC,OAAOC,aAAab,MAIrB,IAGI,mBAAKc,wBAAyB,CACnCC,OAAQrB,MChBGsB,UAtBkB,IAE7B,uBAASC,MAAM,kBACb,YAACC,EAAA,EAAD,CAAQC,MAAM,QACd,qCACA,iDAA+B,iEAA4C,iBAAGC,KAAK,uBAAR,WAA5C,0FAC/B,gHACA,4CACA,mBAAKH,MAAM,QACT,YAAC,EAAD,OAEF,uCACA,mBAAKA,MAAM,mBACT,iBAAGA,MAAM,yCAAyCG,KAAK,2BAA2BC,OAAO,UAAzF,eACA,iBAAGJ,MAAM,yCAAyCG,KAAK,2DAA2DC,OAAO,SAASC,IAAI,cAAtI,+BAEF,gCACA,yFAAoE,iBAAGF,KAAK,2BAAR,oBAApE","file":"route-jam.chunk.808a2.esm.js","sourcesContent":["import { FunctionalComponent, h } from 'preact'\nimport { useEffect, useState } from 'preact/hooks'\n// import DOMPurify from 'dompurify'\n\nconst JamulusStatus: FunctionalComponent = () => {\n  const [statusHTML, setStatusHTML] = useState<string>('Loading...')\n  const statusFetchAborter = new AbortController()\n\n  useEffect(() => {\n    let alive = true\n    let timeoutID: ReturnType<typeof setTimeout>\n\n    const refresh = (): void => {\n      if (!alive) return\n      fetch(\n        'https://psilly.com/jam/jamulus-status.html',\n        statusFetchAborter\n      )\n        .then(data => alive ? data.text() : 'ded')\n        .then(html => {\n          if (alive) {\n            setStatusHTML(html || '<p>Error fetching server status</p>')\n            timeoutID = setTimeout(refresh, 1<<14)\n          }\n        })\n        .catch((error: string) => {\n          if (alive) setStatusHTML(`<p>Error: ${error}</p>`)\n        })\n    }\n    refresh()\n\n    return (): void => {\n      alive = false\n      statusFetchAborter.abort()\n      window.clearTimeout(timeoutID)\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  //__html: DOMPurify.sanitize(statusHTML)\n  return <div dangerouslySetInnerHTML={{\n    __html: statusHTML\n  }} />\n}\n\nexport default JamulusStatus\n","import { FunctionalComponent, h } from 'preact'\nimport Helmet from 'react-helmet'\nimport JamulusStatus from './jamulus'\n\nconst Jam: FunctionalComponent = () => {\n  return (\n    <section class=\"container py-5\">\n      <Helmet title=\"Jam\" />\n      <h1>Psilly Jams</h1>\n      <p>I wanna jam it with you!</p><p>Get an instrument hooked up and join our <a href=\"https://jamulus.io/\">Jamulus</a> server. The server is in Montr√©al, so for best results, live near here. N'est-ce pas?</p>\n      <pre>Psilly (psilly.com:22124) on the \"Any Genre 1\" directory (anygenre1.jamulus.io:22124)</pre>\n      <h2>Who's Jammin' Now?</h2>\n      <div class=\"mb-2\">\n        <JamulusStatus />\n      </div>\n      <h2>Server Status</h2>\n      <div class=\"list-group mb-3\">\n        <a class=\"list-group-item list-group-item-action\" href=\"/jam/jamulus-status.html\" target=\"_blank\">HTML status</a>\n        <a class=\"list-group-item list-group-item-action\" href=\"https://explorer.jamulus.io/servers.php?query=psilly.com\" target=\"_blank\" rel=\"noreferrer\">Jamulus.io Explorer Status</a>\n      </div>\n      <h2>Issues</h2>\n      <p>Let me know of any trouble you have with the server, my email is <a href=\"mailto:dylan@psilly.com\">dylan@psilly.com</a>.</p>\n    </section>\n  )\n}\n\nexport default Jam"],"sourceRoot":""}